{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","timerId2","this","window","setInterval","setState","console","info","toUTCString","slice","clearInterval","name","props","className","React","Component","getRandomName","value","now","toString","App","hasClock","clockName","timerId","handleContextmenu","event","preventDefault","handleClick","document","addEventListener","_prevProps","prevState","prevName","currentName","debug","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAe,CACbC,KAAM,IAAIC,MAFd,EAKEC,SAAW,EALb,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,SAAWE,OAAOC,aAAY,WACjC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,OAE1BM,QAAQC,MAAK,IAAIP,MAAOQ,cAAcC,OAAO,IAAK,MACjD,OAZP,kCAeE,WACEN,OAAOO,cAAcR,KAAKD,YAhB9B,oBAmBE,WACE,IAAQF,EAASG,KAAKJ,MAAdC,KACAY,EAAST,KAAKU,MAAdD,KAER,OACE,sBAAKE,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGF,IAGF,YAED,sBAAME,UAAU,cAAhB,SACGd,EAAKS,cAAcC,OAAO,IAAK,YAhC1C,GAA2BK,IAAMC,WCDjC,SAASC,IACP,IAAMC,EAAQjB,KAAKkB,MAAMC,WAAWV,OAAO,GAE3C,MAAM,SAAN,OAAgBQ,GAGX,IAAMG,EAAb,4MACEtB,MAAe,CACbuB,UAAU,EACVC,UAAW,WAHf,EAMEC,QAAU,EANZ,EAiCEC,kBAAoB,SAACC,GACnBA,EAAMC,iBACN,EAAKrB,SAAS,CAAEgB,UAAU,KAnC9B,EAsCEM,YAAc,WACZ,EAAKtB,SAAS,CAAEgB,UAAU,KAvC9B,uDAQE,WAAqB,IAAD,OAClBnB,KAAKqB,QAAUpB,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEiB,UAAWN,QAC1B,MAEHY,SAASC,iBAAiB,cAAe3B,KAAKsB,mBAC9CI,SAASC,iBAAiB,QAAS3B,KAAKyB,eAd5C,gCAiBE,SAAmBG,EAAgBC,GACjC,IAAMC,EAAWD,EAAUT,UACrBW,EAAc/B,KAAKJ,MAAMwB,UAE3BU,IAAaC,GAAe/B,KAAKJ,MAAMuB,UAEzCf,QAAQ4B,MAAR,uBAA8BF,EAA9B,eAA6CC,MAvBnD,kCA2BE,WACEL,SAASO,oBAAoB,cAAejC,KAAKsB,mBACjDI,SAASO,oBAAoB,QAASjC,KAAKyB,aAC3CxB,OAAOO,cAAcR,KAAKqB,WA9B9B,oBA0CE,WACE,MAAgCrB,KAAKJ,MAA7BuB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKT,UAAU,MAAf,UACE,6CAECQ,GACC,cAAC,EAAD,CAAOV,KAAMW,WAlDvB,GAAyBR,IAAMC,WCZ/BqB,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.d4ee3509.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  time: Date;\n};\n\ntype Props = {\n  name: string;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state: State = {\n    time: new Date(),\n  };\n\n  timerId2 = 0;\n\n  componentDidMount() {\n    this.timerId2 = window.setInterval(() => {\n      this.setState({ time: new Date() });\n      // eslint-disable-next-line no-console\n      console.info(new Date().toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId2);\n  }\n\n  render() {\n    const { time } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {time.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components';\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', this.handleContextmenu);\n    document.addEventListener('click', this.handleClick);\n  }\n\n  componentDidUpdate(_prevProps: {}, prevState: State): void {\n    const prevName = prevState.clockName;\n    const currentName = this.state.clockName;\n\n    if (prevName !== currentName && this.state.hasClock) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevName} to ${currentName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.handleContextmenu);\n    document.removeEventListener('click', this.handleClick);\n    window.clearInterval(this.timerId);\n  }\n\n  handleContextmenu = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  handleClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && (\n          <Clock name={clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}